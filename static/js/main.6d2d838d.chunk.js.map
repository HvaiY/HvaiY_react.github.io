{"version":3,"sources":["actions/useraction.js","actions/notifications.js","components/Frame/Logo.png","components/Loading/index.js","views/index.js","routes/index.js","components/Frame/index.js","App.jsx","reducers/notifications.js","reducers/user.js","reducers/index.js","store.js","index.js","actions/actionTypes.js","requests/index.js"],"names":["loginFailed","window","localStorage","removeItem","sessionStorage","type","actionTypes","LOGIN_FAILED","logout","dispatch","login","userInfo","START_LOGIN","payload","isLoading","console","log","loginRequest","then","resp","data","code","authToken","remember","setItem","JSON","stringify","LOGIN_SUCCESS","changeAvatar","avatar","CHANGE_AVATAR","fetchNotificationByPost","startNotificationRead","getNotifications","START_NOTIFICATION_FETCH","list","finishNotificationRead","markNotificationAsReadById","id","setTimeout","MARK_NOTIFICATION_AS_READ_BY_ID","markNotificationAsUnReadById","MARK_NOTIFICATION_AS_UNREAD_BY_ID","markNotificationAsRead","MARK_NOTIFICATION_AS_READ","START_NOTIFICATION_READ","FINISH_NOTIFICATION_READ","module","exports","Loading","Component","Dashboard","Loadable","loader","loading","Login","NotFound","Settings","ArticleList","ArticleEdit","Notification","NoAuth","Profile","mainRoute","pathname","component","roles","adminRoute","title","isNav","icon","DashboardOutlined","SettingOutlined","exact","OrderedListOutlined","Header","SubMenu","Content","Sider","menu","filter","c","Frame","connect","state","notification","notifications","item","hasRead","length","user","displayName","withRouter","OnDropdownMenuClick","key","props","history","push","onMenuCLick","renderDropDown","onClick","Item","dot","Boolean","this","selectedItemArray","location","split","style","minHeight","className","src","Logo","alt","overlay","trigger","display","alignItems","count","offset","DownOutlined","width","mode","defaultSelectedKeys","join","height","borderRight","map","r","padding","background","margin","children","App","isLogin","role","route","path","render","routerProps","includes","to","from","initState","desc","getItem","parse","combineReducers","action","newList","newListUn","newListAll","t","createStore","rootReducer","applyMiddleware","thunk","store","locale","zhCN","document","querySelector","service","axios","create","baseURL","service1","interceptors","request","use","config","Object","assign","response","error","getArticles","limited","post","deleteArticleById","getArticleById","saveArticle","getArticleAmount"],"mappings":"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","file":"static/js/main.6d2d838d.chunk.js","sourcesContent":["import actionTypes from './actionTypes'\r\nimport {\r\n    loginRequest\r\n} from '../requests'\r\n\r\n\r\nconst startLogin = () => {\r\n    return {\r\n        type: actionTypes.START_LOGIN,\r\n        payload: {\r\n            isLoading: true\r\n        }\r\n    }\r\n}\r\n\r\nconst loginSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        payload: {\r\n            ...data\r\n        }\r\n    }\r\n}\r\n\r\nconst loginFailed = () => {\r\n    window.localStorage.removeItem('authToken')\r\n    window.sessionStorage.removeItem('authToken')\r\n    window.localStorage.removeItem('userInfo')\r\n    window.sessionStorage.removeItem('userInfo')\r\n    return {\r\n        type: actionTypes.LOGIN_FAILED\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return dispatch => {\r\n        //实际项目中可能需要告知后端，根据具体需求来\r\n        dispatch(loginFailed())\r\n    }\r\n}\r\nexport const login = (userInfo) => {\r\n    return dispatch => {\r\n        dispatch(startLogin())\r\n        console.log(userInfo)\r\n        loginRequest(userInfo)\r\n            .then(resp => {\r\n                if (resp.data.code === 200) {\r\n                    const {\r\n                        authToken,\r\n                        ...userInfo\r\n                    } = resp.data.data\r\n\r\n                    if (userInfo.remember) {\r\n                        window.localStorage.setItem('authToken', authToken)\r\n                        window.localStorage.setItem('userInfo', JSON.stringify(userInfo))\r\n                    } else {\r\n                        window.sessionStorage.setItem('authToken', authToken)\r\n                        window.sessionStorage.setItem('userInfo', JSON.stringify(userInfo))\r\n                    }\r\n                    dispatch(loginSuccess(resp.data.data))\r\n                } else {\r\n                    dispatch(loginFailed())\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const changeAvatar = (avatar) => {\r\n\r\n    return {\r\n        type: actionTypes.CHANGE_AVATAR,\r\n        payload: {\r\n            avatar\r\n        }\r\n    }\r\n}","import actionTypes from './actionTypes'\r\nimport {\r\n    getNotifications\r\n} from '../requests'\r\n\r\n\r\n\r\n\r\nexport const fetchNotificationByPost = () => {\r\n    return dispatch => {\r\n        dispatch(startNotificationRead())\r\n        getNotifications().then((resp) => {\r\n            console.log(resp);\r\n            dispatch({\r\n                type: actionTypes.START_NOTIFICATION_FETCH,\r\n                payload: {\r\n                    list: resp.data.list\r\n                }\r\n            })\r\n            dispatch(finishNotificationRead())\r\n        })\r\n    }\r\n}\r\n\r\nexport const markNotificationAsReadById = (id) => {\r\n    return dispatch => {\r\n        dispatch(startNotificationRead())\r\n        //模拟后端请求获取数据 \r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: actionTypes.MARK_NOTIFICATION_AS_READ_BY_ID,\r\n                payload: {\r\n                    id\r\n                }\r\n            })\r\n            dispatch(finishNotificationRead())\r\n        }, 2000)\r\n    }\r\n}\r\n\r\nexport const markNotificationAsUnReadById = (id) => {\r\n    return dispatch => {\r\n        dispatch(startNotificationRead())\r\n        //模拟后端请求获取数据 \r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: actionTypes.MARK_NOTIFICATION_AS_UNREAD_BY_ID,\r\n                payload: {\r\n                    id\r\n                }\r\n            })\r\n            dispatch(finishNotificationRead())\r\n        }, 2000)\r\n    }\r\n}\r\n\r\nexport const markNotificationAsRead = () => {\r\n    return dispatch => {\r\n        dispatch(startNotificationRead())\r\n        //模拟后端请求获取数据 \r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: actionTypes.MARK_NOTIFICATION_AS_READ\r\n            })\r\n            dispatch(finishNotificationRead())\r\n        }, 2000)\r\n    }\r\n}\r\n\r\nexport const startNotificationRead = () => {\r\n    return {\r\n        type: actionTypes.START_NOTIFICATION_READ\r\n    }\r\n}\r\nexport const finishNotificationRead = () => {\r\n    return {\r\n        type: actionTypes.FINISH_NOTIFICATION_READ\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/Logo.f5a81b43.png\";","import React, { Component } from 'react'\r\n\r\nexport default class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                loading......\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import Loadable from \"react-loadable\";\r\n// import Loadable from \"./loadableCustomer\"; // 自定义 loadable 即可得知实现原理，\r\nimport {\r\n  Loading\r\n} from \"../components\";\r\n// import Dashboard from \"./Dashboard\";\r\n// import Login from \"./Login\";\r\n// import NotFound from \"./NotFound\";\r\n// import Settings from \"./Settings\";\r\n// import ArticleList from \"./Article\";\r\n// import ArticleEdit from \"./Article/Edit\";\r\n\r\n// 下面是懒加载组件使用\r\nconst Dashboard = Loadable({\r\n  loader: () => import(\"./Dashboard\"),\r\n  loading: Loading,\r\n});\r\nconst Login = Loadable({\r\n  loader: () => import(\"./Login\"),\r\n  loading: Loading,\r\n});\r\nconst NotFound = Loadable({\r\n  loader: () => import(\"./NotFound\"),\r\n  loading: Loading,\r\n});\r\nconst Settings = Loadable({\r\n  loader: () => import(\"./Settings\"),\r\n  loading: Loading,\r\n});\r\nconst ArticleList = Loadable({\r\n  loader: () => import(\"./Article\"),\r\n  loading: Loading,\r\n});\r\nconst ArticleEdit = Loadable({\r\n  loader: () => import(\"./Article/Edit\"),\r\n  loading: Loading,\r\n});\r\nconst Notification = Loadable({\r\n  loader: () => import(\"./Notifications\"),\r\n  loading: Loading,\r\n});\r\nconst NoAuth = Loadable({\r\n  loader: () => import(\"./NoAuth\"),\r\n  loading: Loading,\r\n});\r\nconst Profile = Loadable({\r\n  loader: () => import(\"./Profile\"),\r\n  loading: Loading,\r\n});\r\nexport {\r\n  Dashboard,\r\n  Login,\r\n  NotFound,\r\n  Settings,\r\n  ArticleList,\r\n  ArticleEdit,\r\n  Notification,\r\n  NoAuth,\r\n  Profile\r\n};","import {\r\n  Dashboard,\r\n  Login,\r\n  NotFound,\r\n  Settings,\r\n  ArticleList,\r\n  ArticleEdit,\r\n  Notification,\r\n  NoAuth,\r\n  Profile\r\n} from \"../views\";\r\nimport {\r\n  DashboardOutlined,\r\n  SettingOutlined,\r\n  OrderedListOutlined,\r\n} from '@ant-design/icons';\r\n\r\nexport const mainRoute = [{\r\n    pathname: \"/Login\",\r\n    component: Login,\r\n    roles: ['001', '002', '003']\r\n  },\r\n  {\r\n    pathname: \"/404\",\r\n    component: NotFound,\r\n    roles: ['001', '002', '003']\r\n  },\r\n];\r\n\r\nexport const adminRoute = [{\r\n    pathname: \"/admin/dashboard\",\r\n    component: Dashboard,\r\n    title: \"仪表盘\",\r\n    isNav: true,\r\n    icon: DashboardOutlined,\r\n    roles: ['001', '002', '003']\r\n  },\r\n  {\r\n    pathname: \"/admin/settings\",\r\n    component: Settings,\r\n    title: \"设置\",\r\n    isNav: true,\r\n    icon: SettingOutlined,\r\n    roles: ['001']\r\n  },\r\n  {\r\n    pathname: \"/admin/article\",\r\n    component: ArticleList,\r\n    exact: true,\r\n    title: \"文章列表\",\r\n    isNav: true,\r\n    icon: OrderedListOutlined,\r\n    roles: ['002', '003']\r\n  },\r\n  {\r\n    pathname: \"/admin/article/edit/:id\",\r\n    component: ArticleEdit,\r\n    title: \"文章编辑\",\r\n    roles: ['002', '003']\r\n  },\r\n  {\r\n    pathname: \"/admin/notification\",\r\n    component: Notification,\r\n    title: \"通知中心\",\r\n    roles: ['001', '002', '003']\r\n  },\r\n  {\r\n    pathname: \"/admin/noauth\",\r\n    component: NoAuth,\r\n    title: \"未授权\",\r\n    roles: ['001', '002', '003']\r\n  },\r\n  {\r\n    pathname: \"/admin/profile\",\r\n    component: Profile,\r\n    title: \"个人设置\",\r\n    roles: ['001', '002', '003']\r\n  },\r\n];","import React, { Component } from \"react\";\r\nimport { Layout, Menu, Breadcrumb, Dropdown, Avatar, Badge } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  UserOutlined,\r\n  LaptopOutlined,\r\n  NotificationOutlined,\r\n  DownOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Logo from \"./Logo.png\";\r\nimport \"./frame.less\";\r\n\r\nimport { adminRoute } from \"../../routes\";\r\nimport { fetchNotificationByPost } from \"../../actions/notifications\";\r\nimport { logout } from \"../../actions/useraction\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nconst menu = adminRoute.filter((c) => c.isNav === true);\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    notification: state.notifications.list.filter(\r\n      (item) => item.hasRead === false\r\n    ).length,\r\n    avatar: state.user.avatar,\r\n    displayName: state.user.displayName,\r\n  };\r\n};\r\n\r\n// 组件来自 antd 的layout 布局\r\n@connect(mapState, { fetchNotificationByPost, logout })\r\n@withRouter\r\nclass Frame extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchNotificationByPost();\r\n  }\r\n\r\n  OnDropdownMenuClick = ({ key }) => {\r\n    if (key === \"/logout\") {\r\n      this.props.logout();\r\n    } else {\r\n      this.props.history.push(key);\r\n    }\r\n  };\r\n\r\n  onMenuCLick = ({ key }) => {\r\n    console.log(key);\r\n    this.props.history.push(key);\r\n  };\r\n\r\n  renderDropDown = () => (\r\n    <Menu onClick={this.OnDropdownMenuClick}>\r\n      <Menu.Item key=\"/admin/notification\">\r\n        <Badge dot={Boolean(this.props.notification)}>通知中心 </Badge>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item key=\"/admin/profile\">个人设置</Menu.Item>\r\n      <Menu.Item key=\"/logout\">退出登录</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const selectedItemArray = this.props.location.pathname.split(\"/\");\r\n    selectedItemArray.length = 3;\r\n    return (\r\n      <Layout style={{ minHeight: \"100%\" }}>\r\n        <Header className=\"demo-header \">\r\n          <div className=\"demo-logo\">\r\n            <img src={Logo} alt=\"ReactTest\" />\r\n          </div>\r\n          <div>\r\n            <Dropdown overlay={this.renderDropDown} trigger={[\"click\"]}>\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <Avatar src={this.props.avatar} />\r\n                <span>\r\n                  欢迎您,{this.props.displayName}\r\n                  <Badge count={this.props.notification} offset={[-5, -8]}>\r\n                    <DownOutlined />\r\n                  </Badge>\r\n                </span>\r\n              </div>\r\n            </Dropdown>\r\n          </div>\r\n        </Header>\r\n        <Layout>\r\n          <Sider width={200} className=\"site-layout-background\">\r\n            <Menu\r\n              mode=\"inline\"\r\n              defaultSelectedKeys={[selectedItemArray.join(\"/\")]}\r\n              onClick={this.onMenuCLick}\r\n              style={{ height: \"100%\", borderRight: 0 }}\r\n            >\r\n              {menu.map((r) => {\r\n                return (\r\n                  <Menu.Item key={r.pathname}>\r\n                    <r.icon />\r\n                    {r.title}\r\n                  </Menu.Item>\r\n                );\r\n              })}\r\n            </Menu>\r\n          </Sider>\r\n          <Layout style={{ padding: \"2px\" }}>\r\n            <Content\r\n              style={{\r\n                background: \"#fff\",\r\n                margin: 0,\r\n              }}\r\n            >\r\n              {this.props.children}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Frame;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { adminRoute } from \"./routes\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Frame from \"./components/Frame\";\r\n\r\n// //高阶组件 ，组件为参数的话，参数首字母必须大写\r\n// const testHOC = (WrappedComponent) => {\r\n//   return class HOCComponent extends Component {\r\n//     render() {\r\n//       return (\r\n//         <>\r\n//           <WrappedComponent />\r\n//           <div> 这是高阶组件的内容</div>\r\n//         </>\r\n//       );\r\n//     }\r\n//   };\r\n// };\r\n\r\nconst mapState = (state) => ({\r\n  isLogin: state.user.isLogin,\r\n  role: state.user.role,\r\n});\r\n// @testHOC\r\n@connect(mapState)\r\nclass App extends Component {\r\n  render() {\r\n    return this.props.isLogin ? (\r\n      <Frame>\r\n        <Switch>\r\n          {adminRoute.map((route) => {\r\n            return (\r\n              <Route\r\n                key={route.pathname}\r\n                path={route.pathname}\r\n                exact={route.exact}\r\n                render={(routerProps) => {\r\n                  return route.roles.includes(this.props.role) ? (\r\n                    <route.component {...routerProps} />\r\n                  ) : (\r\n                    <Redirect to=\"/admin/noauth\" />\r\n                  );\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n          <Redirect to={adminRoute[0].pathname} from=\"/admin\" exact />\r\n          <Redirect to=\"/404\" />\r\n        </Switch>\r\n      </Frame>\r\n    ) : (\r\n      // <div>\r\n      //   {/* <div>这是公共部分</div> */}\r\n\r\n      // </div>\r\n      <Redirect to=\"/login\" />\r\n    );\r\n  }\r\n}\r\n\r\n// export default testHOC(App);\r\nexport default App;\r\n","import actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initState = {\r\n    isLoading: false,\r\n    list: [{\r\n            id: 1,\r\n            title: \"AAAAA\",\r\n            desc: \"this A ,that a ,we are all an a\",\r\n            hasRead: false,\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"BBBBB\",\r\n            desc: \"this b ,that b ,we are all a b\",\r\n            hasRead: true,\r\n        },\r\n    ],\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.START_NOTIFICATION_FETCH:\r\n            return {\r\n                ...state,\r\n                list: action.payload.list\r\n            }\r\n\r\n            case actionTypes.MARK_NOTIFICATION_AS_READ_BY_ID:\r\n                const newList = state.list.map((item) => {\r\n                    if (item.id === action.payload.id) {\r\n                        item.hasRead = true;\r\n                    }\r\n                    return item;\r\n                });\r\n\r\n                return {\r\n                    ...state,\r\n                    list: newList,\r\n                };\r\n            case actionTypes.MARK_NOTIFICATION_AS_UNREAD_BY_ID:\r\n                const newListUn = state.list.map((item) => {\r\n                    if (item.id === action.payload.id) {\r\n                        item.hasRead = false;\r\n                    }\r\n                    return item;\r\n                });\r\n\r\n                return {\r\n                    ...state,\r\n                    list: newListUn,\r\n                };\r\n            case actionTypes.MARK_NOTIFICATION_AS_READ:\r\n                const newListAll = state.list.map((t) => {\r\n                    t.hasRead = true;\r\n                    return t;\r\n                });\r\n                return {\r\n                    ...state,\r\n                    list: newListAll,\r\n                };\r\n            case actionTypes.START_NOTIFICATION_READ:\r\n                return ({\r\n                    ...state,\r\n                    isLoading: true\r\n                })\r\n            case actionTypes.FINISH_NOTIFICATION_READ:\r\n                return ({\r\n                    ...state,\r\n                    isLoading: false\r\n                })\r\n            default:\r\n                return state;\r\n    }\r\n};","import actionTypes from \"../actions/actionTypes\";\r\n\r\nconst isLogin =\r\n  Boolean(window.localStorage.getItem(\"authToken\")) ||\r\n  Boolean(window.sessionStorage.getItem(\"authToken\"));\r\n\r\nconst userInfo =\r\n  JSON.parse(window.localStorage.getItem(\"userInfo\")) ||\r\n  JSON.parse(window.sessionStorage.getItem(\"userInfo\"));\r\n\r\nconst initState = {\r\n  ...userInfo,\r\n  isLogin,\r\n  isLoading: false,\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n          isLogin: true,\r\n          isLoading: false,\r\n      };\r\n    case actionTypes.LOGIN_FAILED:\r\n      return {\r\n        id: \"\",\r\n          displayName: \"\",\r\n          avatar: \"\",\r\n          isLogin: false,\r\n          isLoading: false,\r\n          role: []\r\n      };\r\n    case actionTypes.START_LOGIN:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload.isLoading,\r\n      };\r\n    case actionTypes.CHANGE_AVATAR:\r\n      return {\r\n        ...state,\r\n        avatar: action.payload.avatar\r\n      }\r\n      default:\r\n        return state;\r\n  }\r\n};","import {\r\n    combineReducers\r\n} from 'redux'\r\n\r\nimport notifications from './notifications'\r\nimport user from './user'\r\n\r\nexport default combineReducers({\r\n    notifications,\r\n    user\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport zhCN from \"antd/es/locale/zh_CN\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App.jsx\";\r\nimport store from \"./store\";\r\n\r\nimport { mainRoute } from \"./routes\";\r\n\r\nimport \"./index.less\";\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <ConfigProvider locale={zhCN}>\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            path=\"/admin\"\r\n            render={(routerProps) => {\r\n              //TODO 权限，需要登录才能访问/admin\r\n              return <App {...routerProps} />;\r\n            }}\r\n          ></Route>\r\n          {\r\n            //没有权限的页面可以直接访问\r\n            mainRoute.map((route) => {\r\n              return (\r\n                <Route\r\n                  key={route.pathname}\r\n                  path={route.pathname}\r\n                  component={route.component}\r\n                />\r\n              );\r\n            })\r\n          }{\" \"}\r\n          <Redirect to=\"/admin\" from=\"/\" exact />\r\n          <Redirect to=\"./404\" />\r\n        </Switch>{\" \"}\r\n      </Router>{\" \"}\r\n    </ConfigProvider>\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n","export default {\r\n    MARK_NOTIFICATION_AS_READ_BY_ID: 'MARK_NOTIFICATION_AS_READ_BY_ID',\r\n    MARK_NOTIFICATION_AS_UNREAD_BY_ID: 'MARK_NOTIFICATION_AS_UNREAD_BY_ID',\r\n    MARK_NOTIFICATION_AS_READ: 'MARK_NOTIFICATION_AS_READ',\r\n    START_NOTIFICATION_READ: 'START_NOTIFICATION_READ',\r\n    FINISH_NOTIFICATION_READ: 'FINISH_NOTIFICATION_READ',\r\n    START_NOTIFICATION_FETCH: 'START_NOTIFICATION_FETCH',\r\n    START_LOGIN: 'START_LOGIN',\r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    LOGIN_FAILED: 'LOGIN_FAILED',\r\n    CHANGE_AVATAR: 'CHANGE_AVATAR'\r\n}","import axios from \"axios\";\r\nimport {\r\n  message\r\n} from \"antd\";\r\n\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\n\r\nconst service = axios.create({\r\n  baseURL: isDev ? \"http://rap2.taobao.org:38080/app/mock/252981\" : \"\",\r\n});\r\nconst service1 = axios.create({\r\n  baseURL: isDev ? \"http://rap2.taobao.org:38080/app/mock/252981\" : \"\",\r\n});\r\n\r\n\r\nservice.interceptors.request.use((config) => {\r\n  console.log(config);\r\n  config.data = Object.assign({}, config.data, {\r\n    // authToken:window.localStorage.getItem('authToken')s\r\n    authToken: \"itisToken\",\r\n  });\r\n  return config;\r\n});\r\n\r\nservice.interceptors.response.use((resp) => {\r\n  console.log(\"messagess\");\r\n  // console.log(resp.data);\r\n  if (resp.data.code === 200) {\r\n    return resp.data;\r\n  } else {\r\n    //全局异常处理\r\n    message.error(\"请求错误\");\r\n  }\r\n});\r\n\r\n//获取文章列表\r\nexport const getArticles = (offset = 0, limited = 10) => {\r\n  return service.post(\"/api/v1/articleList\", {\r\n    offset,\r\n    limited,\r\n  });\r\n};\r\n\r\n//通过Id 删除一篇文章\r\nexport const deleteArticleById = (id) => {\r\n  return service.post(`/api/v1/articleDelete/${id}`);\r\n};\r\n\r\n//通过Id 获取详情\r\nexport const getArticleById = (id) => {\r\n  return service.post(`/api/v1/article/${id}`);\r\n};\r\n\r\n//保存\r\nexport const saveArticle = (id, data) => {\r\n  return service.post(`/api/v1/articleEdit/${id}`, data);\r\n};\r\n\r\n//获取阅读数量\r\nexport const getArticleAmount = () => {\r\n  return service.post('/api/v1/articleAmount');\r\n};\r\n\r\n//获取通知列表\r\nexport const getNotifications = () => {\r\n  return service.post('/api/v1/notifications');\r\n};\r\n\r\n\r\n//登录\r\nexport const loginRequest = (data) => {\r\n  console.log(data)\r\n  return service1.post('/api/v1/login', data);\r\n};"],"sourceRoot":""}